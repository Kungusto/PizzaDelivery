from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from src.schemas.meals import Meal
from src.utils.order_helpers import total_cost

def buttons_menu(data: list[Meal], bucket: list[Meal] = []) -> InlineKeyboardMarkup:
    if bucket:
        list_to_add = [[InlineKeyboardButton(text=f"üóë –ö–æ—Ä–∑–∏–Ω–∞ ({len(bucket)} —à—Ç.)", callback_data="bucket")]]
    else:
        list_to_add = []
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=meal.title, callback_data=f"meal-{index}")]
            for index, meal in enumerate(data)] + list_to_add
    )



def buttons_choise() -> InlineKeyboardMarkup: 
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É", callback_data="add")],
            [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="cancel")],
        ]
    )

def buttons_bucket(data: list[Meal]) -> InlineKeyboardMarkup:
    total_cost = total_cost(data)
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=f"{meal.title} ({meal.price}‚ÇΩ)", callback_data=f"bucket-{index}")] 
            for index, meal in enumerate(data)
        ] + [[InlineKeyboardButton(text="üìã –ö –º–µ–Ω—é", callback_data="menu")]] + [[InlineKeyboardButton(text=f"‚úÖ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ ({total_cost}‚ÇΩ)", callback_data="complete-order")]]
    )


def buttons_choise_bucket() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚ùå –£–¥–∞–ª–∏—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã", callback_data="delete-bucket")],
            [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="bucket")],
        ]
    )
